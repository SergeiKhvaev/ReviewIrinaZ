package day21Loop;

public class NestedLoopUnicChar {
    public static void main(String[] args) {
        // java - найти и напечатать все буквы встречающиеся один раз (уникальные буквы)
        //output - jv

        // сделать тоже самое только с дупликатами букв для java - аа

        String str = "java";

        for(int i = 0 ; i < str.length() ; i++){ // внешний луп, начинает работать после того как сработают все циклы внутреннего лууп. Индекс i хранит в себе букву слова заложенную во внешнем цикл. Каждый внешний цикл i +1

            int count = 0; // при каждой итерации внешнего лупа ресет count

            for(int j = 0 ; j< str.length() ; j++) {
                if(str.charAt(i) == str.charAt(j)){// во внутреннем лууп индекс i - неизменен, т.к. он пренадлежит внешнему лууп, поэтому с неизменным i внешнего лууп, внутренний цикл сравнивает нужное количество раз букву под индексом j(буква под индексом j соответственно принадлежит внутренниму лупу и она меняется на +1 с каждым циклом внутреннего). Таким образом, при таком соотношении внешнего и внутреннего лууп достигается то, что каждая буква под индксом  i сверяется с каждой последующей буквой того же слова через индекс j внутренего лууп
                    count++; // при срабатывании if условия во внутреннем цикле счетчик + 1, что означает, что при сравнении одной и той же строки, заложенной во внешний цикл и внутренний цикл, выявляется повторяющиеся буквы
                }
            }
            if(count == 1){// если counter  1 - это значит буква была найдена только один раз , значит она уникальная. If должна быть внутри внушнего цикла
                System.out.print(str.charAt(i));// если счетчик сработал только один раз, соответственно внешний if условие, КОТОРОЕ ЗАЛОЖЕНО ВО ВНЕШНИЙ ЦИКЛ срабатывает и мы печатаем только те символы под индексами i которые встретились только один раз
            }

        }




    }
}
